name: Manual Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (dev, test, prod)'
        required: true
        default: 'dev'

env:
  ASSET_NAME: salesforce-package

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Latest Release Asset
        id: fetch_asset
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const environment = '${{ github.event.inputs.environment }}';
            const assetName = '${{ env.ASSET_NAME }}-' + environment + '.zip';

            // Get the latest release
            const release = await github.rest.repos.getLatestRelease({
              owner,
              repo
            });

            // Find the matching asset
            const asset = release.data.assets.find(a => a.name === assetName);
            if (!asset) {
              throw new Error(`No asset found with name ${assetName}`);
            }

            // Download the asset URL
            console.log(`Asset URL: ${asset.browser_download_url}`);
            return asset.browser_download_url;

      - name: Download Release Asset
        run: |
          echo "Downloading asset..."
          curl -L -o ${{ env.ASSET_NAME }}-${{ github.event.inputs.environment }}.zip '${{ steps.fetch_asset.outputs.result }}'
          mkdir -p deployment
          unzip ${{ env.ASSET_NAME }}-${{ github.event.inputs.environment }}.zip -d deployment
          ls -la deployment

      - name: Deploy to ${{ github.event.inputs.environment }}
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }} environment..."
          cat deployment/config.yaml
          echo "Deployment successful for ${{ github.event.inputs.environment }}!"
